// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BranchProtectionV3RequiredStatusChecksArgs extends com.pulumi.resources.ResourceArgs {

    public static final BranchProtectionV3RequiredStatusChecksArgs Empty = new BranchProtectionV3RequiredStatusChecksArgs();

    /**
     * The list of status checks to require in order to merge into this branch. No status checks are required by default.
     * 
     */
    @Import(name="contexts")
    private @Nullable Output<List<String>> contexts;

    /**
     * @return The list of status checks to require in order to merge into this branch. No status checks are required by default.
     * 
     */
    public Optional<Output<List<String>>> contexts() {
        return Optional.ofNullable(this.contexts);
    }

    /**
     * @deprecated
     * Use enforce_admins instead
     * 
     */
    @Deprecated /* Use enforce_admins instead */
    @Import(name="includeAdmins")
    private @Nullable Output<Boolean> includeAdmins;

    /**
     * @deprecated
     * Use enforce_admins instead
     * 
     */
    @Deprecated /* Use enforce_admins instead */
    public Optional<Output<Boolean>> includeAdmins() {
        return Optional.ofNullable(this.includeAdmins);
    }

    /**
     * Require branches to be up to date before merging. Defaults to `false`.
     * 
     */
    @Import(name="strict")
    private @Nullable Output<Boolean> strict;

    /**
     * @return Require branches to be up to date before merging. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> strict() {
        return Optional.ofNullable(this.strict);
    }

    private BranchProtectionV3RequiredStatusChecksArgs() {}

    private BranchProtectionV3RequiredStatusChecksArgs(BranchProtectionV3RequiredStatusChecksArgs $) {
        this.contexts = $.contexts;
        this.includeAdmins = $.includeAdmins;
        this.strict = $.strict;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BranchProtectionV3RequiredStatusChecksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BranchProtectionV3RequiredStatusChecksArgs $;

        public Builder() {
            $ = new BranchProtectionV3RequiredStatusChecksArgs();
        }

        public Builder(BranchProtectionV3RequiredStatusChecksArgs defaults) {
            $ = new BranchProtectionV3RequiredStatusChecksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contexts The list of status checks to require in order to merge into this branch. No status checks are required by default.
         * 
         * @return builder
         * 
         */
        public Builder contexts(@Nullable Output<List<String>> contexts) {
            $.contexts = contexts;
            return this;
        }

        /**
         * @param contexts The list of status checks to require in order to merge into this branch. No status checks are required by default.
         * 
         * @return builder
         * 
         */
        public Builder contexts(List<String> contexts) {
            return contexts(Output.of(contexts));
        }

        /**
         * @param contexts The list of status checks to require in order to merge into this branch. No status checks are required by default.
         * 
         * @return builder
         * 
         */
        public Builder contexts(String... contexts) {
            return contexts(List.of(contexts));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use enforce_admins instead
         * 
         */
        @Deprecated /* Use enforce_admins instead */
        public Builder includeAdmins(@Nullable Output<Boolean> includeAdmins) {
            $.includeAdmins = includeAdmins;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use enforce_admins instead
         * 
         */
        @Deprecated /* Use enforce_admins instead */
        public Builder includeAdmins(Boolean includeAdmins) {
            return includeAdmins(Output.of(includeAdmins));
        }

        /**
         * @param strict Require branches to be up to date before merging. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder strict(@Nullable Output<Boolean> strict) {
            $.strict = strict;
            return this;
        }

        /**
         * @param strict Require branches to be up to date before merging. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder strict(Boolean strict) {
            return strict(Output.of(strict));
        }

        public BranchProtectionV3RequiredStatusChecksArgs build() {
            return $;
        }
    }

}
