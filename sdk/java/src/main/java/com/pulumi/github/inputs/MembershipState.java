// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MembershipState extends com.pulumi.resources.ResourceArgs {

    public static final MembershipState Empty = new MembershipState();

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The role of the user within the organization.
     * Must be one of `member` or `admin`. Defaults to `member`.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role of the user within the organization.
     * Must be one of `member` or `admin`. Defaults to `member`.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The user to add to the organization.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The user to add to the organization.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private MembershipState() {}

    private MembershipState(MembershipState $) {
        this.etag = $.etag;
        this.role = $.role;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MembershipState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MembershipState $;

        public Builder() {
            $ = new MembershipState();
        }

        public Builder(MembershipState defaults) {
            $ = new MembershipState(Objects.requireNonNull(defaults));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param role The role of the user within the organization.
         * Must be one of `member` or `admin`. Defaults to `member`.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role of the user within the organization.
         * Must be one of `member` or `admin`. Defaults to `member`.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param username The user to add to the organization.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The user to add to the organization.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public MembershipState build() {
            return $;
        }
    }

}
